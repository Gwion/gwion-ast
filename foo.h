typedef struct {

} Foo;

ANN void foo_symbol(Foo *a, Symbol b);
ANN void foo_array_sub(Foo *a, Array_Sub b);
ANN void foo_specialized(Foo *a, Specialized *b);
ANN void foo_tmpl(Foo *a, Tmpl *b);
ANN void foo_range(Foo *a, Range *b);
ANN void foo_type_decl(Foo *a, Type_Decl *b);
ANN void foo_prim_id(Foo *a, Symbol *b);
ANN void foo_prim_num(Foo *a, m_uint *b);
ANN void foo_prim_float(Foo *a, m_float *b);
ANN void foo_prim_str(Foo *a, m_str *b);
ANN void foo_prim_array(Foo *a, Array_Sub *b);
ANN void foo_prim_range(Foo *a, Range* *b);
ANN void foo_prim_dict(Foo *a, Exp *b);
ANN void foo_prim_hack(Foo *a, Exp *b);
ANN void foo_prim_typeof(Foo *a, Exp *b);
ANN void foo_prim_interp(Foo *a, Exp *b);
ANN void foo_prim_char(Foo *a, m_str *b);
ANN void foo_prim_nil(Foo *a, void *b);
ANN void foo_prim_perform(Foo *a, Symbol *b);
ANN void foo_prim(Foo *a, Exp_Primary *b);
ANN void foo_var_decl(Foo *a, Var_Decl *b);
ANN void foo_exp_decl(Foo *a, Exp_Decl *b);
ANN void foo_exp_binary(Foo *a, Exp_Binary *b);
ANN void foo_exp_unary(Foo *a, Exp_Unary *b);
ANN void foo_exp_cast(Foo *a, Exp_Cast *b);
ANN void foo_exp_post(Foo *a, Exp_Postfix *b);
ANN void foo_exp_call(Foo *a, Exp_Call *b);
ANN void foo_exp_array(Foo *a, Exp_Array *b);
ANN void foo_exp_slice(Foo *a, Exp_Slice *b);
ANN void foo_exp_if(Foo *a, Exp_If *b);
ANN void foo_exp_dot(Foo *a, Exp_Dot *b);
ANN void foo_exp_lambda(Foo *a, Exp_Lambda *b);
ANN void foo_exp_td(Foo *a, Type_Decl *b);
ANN void foo_exp(Foo *a, Exp b);
ANN void foo_stmt_exp(Foo *a, Stmt_Exp b);
ANN void foo_stmt_while(Foo *a, Stmt_Flow b);
ANN void foo_stmt_until(Foo *a, Stmt_Flow b);
ANN void foo_stmt_for(Foo *a, Stmt_For b);
ANN void foo_stmt_each(Foo *a, Stmt_Each b);
ANN void foo_stmt_loop(Foo *a, Stmt_Loop b);
ANN void foo_stmt_if(Foo *a, Stmt_If b);
ANN void foo_stmt_code(Foo *a, Stmt_Code b);
ANN void foo_stmt_break(Foo *a, Stmt_Exp b);
ANN void foo_stmt_continue(Foo *a, Stmt_Exp b);
ANN void foo_stmt_return(Foo *a, Stmt_Exp b);
ANN void foo_case_list(Foo *a, Stmt_List b);
ANN void foo_stmt_match(Foo *a, Stmt_Match b);
ANN void foo_stmt_case(Foo *a, Stmt_Match b);
ANN void foo_stmt_index(Foo *a, Stmt_Index b);
ANN void foo_stmt_pp(Foo *a, Stmt_PP b);
ANN void foo_stmt_retry(Foo *a, Stmt_Exp b);
ANN void foo_stmt_try(Foo *a, Stmt_Try b);
ANN void foo_stmt_defer(Foo *a, Stmt_Defer b);
ANN void foo_stmt(Foo *a, Stmt b);
ANN void foo_arg(Foo *a, Arg *b);
ANN void foo_union_list(Foo *a, Union_List b);
ANN void foo_stmt_list(Foo *a, Stmt_List b);
ANN void foo_func_base(Foo *a, Func_Base *b);
ANN void foo_func_def(Foo *a, Func_Def b);
ANN void foo_class_def(Foo *a, Class_Def b);
ANN void foo_trait_def(Foo *a, Trait_Def b);
ANN void foo_enum_def(Foo *a, Enum_Def b);
ANN void foo_union_def(Foo *a, Union_Def b);
ANN void foo_fptr_def(Foo *a, Fptr_Def b);
ANN void foo_type_def(Foo *a, Type_Def b);
ANN void foo_extend_def(Foo *a, Extend_Def b);
ANN void foo_spread_def(Foo *a, Spread_Def b);
ANN void foo_section(Foo *a, Section *b);
ANN void foo_ast(Foo *a, Ast b);
